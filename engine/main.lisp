(load "~/quicklisp/setup.lisp")
(ql:quickload :cffi)
(load "video.lisp")

(defvar q)

(defun main ()
  (video:video-init 2)
  (setf q 1)
  (with-open-file (in "tiles" :direction :input :element-type 'unsigned-byte)
    (dotimes (i 2000)
      (setf (aref video:*tiles* i) (read-byte in))))
  (with-open-file (in "screen" :direction :input :element-type 'unsigned-byte)
    (dotimes (i 1000)
      (setf (aref video:*screen* i) (read-byte in))))
  (with-open-file (in "colors" :direction :input :element-type 'unsigned-byte)
    (dotimes (i 1000)
      (setf (aref video:*colors* i) (read-byte in))))
  (with-open-file (in "sprites" :direction :input :element-type 'unsigned-byte)
    (dotimes (i (* 64 80))
      (setf (aref video:*sprites-data* i) (read-byte in))))
  (setf video:*back-multi-color* 9)
  (setf video:*back-multi-color2* 8)
  (setf video:*sprite-color1* 7)
  (setf video:*sprite-color2* 2)
  (loop while (= q 1)
	do (setf q (video:video-get-events))
	   (video:render-screen))
  (video:video-close))

(main)

(dotimes (i 1000)
  (setf (aref video:*colors* 803) 11))
(setf (aref video:*sprites* 1) (video:make-sprite :x 150 :y 130 :num 17 :color 9 :collision nil :multi nil))
(setf (aref video:*sprites* 0) (video:make-sprite :x 136 :y 134 :num 0 :color 10 :collision t :multi t))
(setf (aref video:*screen* 0) 4)
(setf video:*back-color* 0)
(setf (aref video:*sprites-collisions* 0) nil)
video:*sprites-collisions*
(video:close-lib)
